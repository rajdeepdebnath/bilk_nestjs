import { MigrationInterface, QueryRunner } from 'typeorm';

export class initialize1678375974029 implements MigrationInterface {
  query = `CREATE TABLE "brand" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" varchar,
    "contact_number" varchar,
    "address" varchar,
    "logo_url" varchar,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "brokerage" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" varchar,
    "contact_number" varchar,
    "address_id" int,
    "logo_url" varchar,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "brokerage_brand_access" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "brokerage_id" int,
    "brand_id" int,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "broker_brand_access" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "broker_user_id" int,
    "brand_id" int,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "user" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "first_name" varchar NOT NULL,
    "last_name" varchar,
    "email" varchar UNIQUE NOT NULL,
    "job_title" varchar,
    "password" varchar NOT NULL,
    "contact_number" varchar,
    "photo_url" varchar,
    "is_active" boolean NOT NULL DEFAULT true,
    "email_confirmed_at" timestamp,
    "brokerage_id" int,
    "brand_id" int,
    "company_permission" varchar,
    "is_admin" boolean NOT NULL DEFAULT false,
    "role_id" int,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "retailer" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "bio" varchar,
    "founded" varchar,
    "logo_url" varchar,
    "name" varchar NOT NULL,
    "revenue" varchar,
    "employee_count" int,
    "store_count" int,
    "website" varchar,
    "exclusive_access_broker_id" int,
    "status" varchar NOT NULL,
    "region_id" int,
    "country" varchar NOT NULL,
    "address_id" int,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now()),
    "deleted_at" timestamp
  );

  CREATE TABLE "country" (
    "name" varchar PRIMARY KEY
  );

  CREATE TABLE "region" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" varchar,
    "country" varchar
  );

  CREATE TABLE "address" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "city" varchar,
    "country" varchar,
    "region_id" int,
    "state" varchar,
    "street" varchar,
    "unit_number" varchar,
    "zip_code" varchar,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "review_schedule_default" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "retailer_id" int NOT NULL,
    "product_category_name" varchar,
    "product_category_custom_text" varchar,
    "subcategory" varchar,
    "meeting_start_date" date,
    "meeting_end_date" date,
    "pog_release_date" date,
    "store_reset_date" date,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "role" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" varchar,
    "brokerage_id" int,
    "brand_id" int,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "permission" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "action" varchar NOT NULL,
    "subject_name" varchar NOT NULL,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "subject" (
    "name" varchar PRIMARY KEY,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "role_permission" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "role_id" int NOT NULL,
    "permission_id" int NOT NULL,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "enum_product_category" (
    "name" varchar PRIMARY KEY,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "enum_company_permission" (
    "name" varchar PRIMARY KEY,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "enum_corp_type" (
    "name" varchar PRIMARY KEY,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  CREATE TABLE "enum_retailer_status" (
    "name" varchar PRIMARY KEY,
    "created_at" timestamp DEFAULT (now()),
    "updated_at" timestamp DEFAULT (now())
  );

  ALTER TABLE "brokerage" ADD FOREIGN KEY ("address_id") REFERENCES "address" ("id");

  ALTER TABLE "brokerage_brand_access" ADD FOREIGN KEY ("brokerage_id") REFERENCES "brokerage" ("id");

  ALTER TABLE "brokerage_brand_access" ADD FOREIGN KEY ("brand_id") REFERENCES "brand" ("id");

  ALTER TABLE "broker_brand_access" ADD FOREIGN KEY ("broker_user_id") REFERENCES "user" ("id");

  ALTER TABLE "broker_brand_access" ADD FOREIGN KEY ("brand_id") REFERENCES "brand" ("id");

  ALTER TABLE "user" ADD FOREIGN KEY ("brokerage_id") REFERENCES "brokerage" ("id");

  ALTER TABLE "user" ADD FOREIGN KEY ("brand_id") REFERENCES "brand" ("id");

  ALTER TABLE "user" ADD FOREIGN KEY ("company_permission") REFERENCES "enum_company_permission" ("name");

  ALTER TABLE "user" ADD FOREIGN KEY ("role_id") REFERENCES "role" ("id");

  ALTER TABLE "retailer" ADD FOREIGN KEY ("exclusive_access_broker_id") REFERENCES "brokerage" ("id");

  ALTER TABLE "retailer" ADD FOREIGN KEY ("status") REFERENCES "enum_retailer_status" ("name");

  ALTER TABLE "retailer" ADD FOREIGN KEY ("region_id") REFERENCES "region" ("id");

  ALTER TABLE "retailer" ADD FOREIGN KEY ("country") REFERENCES "country" ("name");

  ALTER TABLE "retailer" ADD FOREIGN KEY ("address_id") REFERENCES "address" ("id");

  ALTER TABLE "region" ADD FOREIGN KEY ("country") REFERENCES "country" ("name");

  ALTER TABLE "address" ADD FOREIGN KEY ("country") REFERENCES "country" ("name");

  ALTER TABLE "address" ADD FOREIGN KEY ("region_id") REFERENCES "region" ("id");

  ALTER TABLE "review_schedule_default" ADD FOREIGN KEY ("retailer_id") REFERENCES "retailer" ("id");

  ALTER TABLE "review_schedule_default" ADD FOREIGN KEY ("product_category_name") REFERENCES "enum_product_category" ("name");

  ALTER TABLE "role" ADD FOREIGN KEY ("brokerage_id") REFERENCES "brokerage" ("id");

  ALTER TABLE "role" ADD FOREIGN KEY ("brand_id") REFERENCES "brand" ("id");

  ALTER TABLE "permission" ADD FOREIGN KEY ("subject_name") REFERENCES "subject" ("name");

  ALTER TABLE "role_permission" ADD FOREIGN KEY ("role_id") REFERENCES "role" ("id");

  ALTER TABLE "role_permission" ADD FOREIGN KEY ("permission_id") REFERENCES "permission" ("id");
  `;

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(this.query);
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`
        drop table
            enum_permission,
            brokerage_brand,
            user_brokerage_brand,
            user,
            brokerage,
            brand,
            enum_corp_type
            retailer
            country
            region
            CASCADE;
    `);
  }
}
